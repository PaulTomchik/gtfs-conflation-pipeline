#!/usr/bin/env node

/* eslint-disable no-restricted-syntax, no-continue */

const { createWriteStream } = require("fs");

const _ = require("lodash");

const Database = require("better-sqlite3");

const { join } = require("path");

const db = new Database(join(__dirname, "../base_data/conflation_map"));

const iter = db
  .prepare(
    `
    SELECT
        feature
      FROM conflation_map
      ORDER BY id ;`
  )
  .raw()
  .iterate();

const outputStream = createWriteStream(
  join(__dirname, "../derived_data/gtfs_qa_conflation_map.ndjson")
);

for (const [featureStr] of iter) {
  const feature = JSON.parse(featureStr);
  const {
    id,
    properties: {
      networklevel: netlev,
      shstReferenceId: shstid,
      segmentIndex: shstidx,
      osm: {
        conflationMapMatchedTargetMapId: osmid,
        conflationMapMatchedTargetMapIdx: osmidx,
      },
    },
  } = feature;

  feature.properties = { id, shstid, shstidx, osmid, osmidx, netlev };

  feature.geometry.coordinates = _(feature.geometry.coordinates)
    .flattenDeep()
    .map((coord) => _.round(coord, 6))
    .chunk(2)
    .value();

  outputStream.write(`${JSON.stringify(feature)}\n`);
}
