#!/usr/bin/env node

/* eslint-disable no-unused-expressions, jsdoc/require-jsdoc */

const { join } = require("path");

const yargs = require("yargs");

const raw_gtfs_into_sqlite = require("./src/pipeline_transforms/raw_gtfs_into_sqlite/yargs_wrapper");
const gtfs_as_geojson = require("./src/pipeline_transforms/gtfs_as_geojson/yargs_wrapper");
const gtfs_network = require("./src/pipeline_transforms/gtfs_network/yargs_wrapper");
const gtfs_osm_network = require("./src/pipeline_transforms/gtfs_osm_network/yargs_wrapper");
const scheduled_bus_traffic = require("./src/pipeline_transforms/scheduled_bus_traffic/yargs_wrapper");
const conflation_map = require("./src/pipeline_transforms/conflation_map/yargs_wrapper");
const gtfs_conflation_map_join = require("./src/pipeline_transforms/gtfs_conflation_map_join/yargs_wrapper");
const output = require("./src/pipeline_transforms/output/yargs_wrapper");

function addOutputDirToEnvironment(argv) {
  const { output_dir } = argv;
  process.env.AVL_GTFS_CONFLATION_OUTPUT_DIR = output_dir;
  return argv;
}

yargs
  .middleware(addOutputDirToEnvironment)
  .parserConfiguration({
    "camel-case-expansion": false,
    "flatten-duplicate-arrays": false
  })
  .option({
    output_dir: {
      type: "string",
      desc:
        "Path to the output directory. (Can be set using ENV variable AVL_GTFS_CONFLATION_OUTPUT_DIR.)",
      default:
        process.env.AVL_GTFS_CONFLATION_OUTPUT_DIR ||
        join(process.cwd(), "output")
    }
  })
  .command(raw_gtfs_into_sqlite)
  .command(gtfs_as_geojson)
  .command(gtfs_network)
  .command(gtfs_osm_network)
  .command(scheduled_bus_traffic)
  .command(conflation_map)
  .command(gtfs_conflation_map_join)
  .command(output)
  .demandCommand()
  .recommendCommands()
  .strict()
  .wrap(yargs.terminalWidth() / 1.618).argv;
