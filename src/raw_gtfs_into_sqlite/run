#!/usr/bin/env node

const { sync: mkdirpSync } = require('mkdirp');
const { sync: commandExistsSync } = require('command-exists');

const yargs = require('yargs');

const logger = require('../services/logger');

const RawGtfsSQLiteService = require('../services/RawGtfsSQLiteService');

const loadGtfsZipIntoSqlite = require('./loadGtfsZipIntoSqlite');

const builder = {
  gtfs_zip: {
    type: 'string',
    demand: true
  },
  sqlite_dir: {
    type: 'string',
    demand: true
  }
};

const handler = async argv => {
  try {
    const { gtfs_zip, sqlite_dir } = argv;

    mkdirpSync(sqlite_dir);

    const db_service = RawGtfsSQLiteService.getDbService(sqlite_dir);

    const sysHasSqlite3 = !!commandExistsSync('sqlite3');

    if (!sysHasSqlite3) {
      throw new Error('ERROR: sqlite3 must be installed on the system.');
    }

    logger.time('Load GTFS');

    await loadGtfsZipIntoSqlite(db_service, gtfs_zip);

    logger.timeEnd('Load GTFS');
  } catch (err) {
    logger.error(err);
    process.exit(1);
  }
};

if (require.handler === module) {
  const { argv } = yargs
    .strict()
    .parserConfiguration({
      'camel-case-expansion': false,
      'flatten-duplicate-arrays': true
    })
    .wrap(yargs.terminalWidth() / 1.618)
    .option(builder);

  handler(argv);
}

module.exports = {
  builder,
  handler
};
